name: Code Test Pipeline
on:
  pull_request:
    branches: ["dev", "main"]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            $GITHUB_WORKSPACE/.gradle/caches
            $GITHUB_WORKSPACE/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Create firebase_admin_sdk_private_key.json from Secrets
        run: |
          mkdir -p $GITHUB_WORKSPACE/src/main/resources/key
          echo "${{ secrets.FIREBASE_ADMIN_SDK_PRIVATE_KEY }}" | base64 --decode > $GITHUB_WORKSPACE/src/main/resources/key/firebase_admin_sdk_private_key.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SPRING_ACTIVE_PROFILE: ${{ vars.SPRING_ACTIVE_PROFILE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FCM_PROJECT_ID: ${{ secrets.FCM_PROJECT_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Publish Test Report 1
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.PAT_TOKEN }}
          comment: 'true'
          updateComment: 'false'
